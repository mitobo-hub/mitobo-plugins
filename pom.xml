<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.unihalle.informatik.MiToBo</groupId>
  <artifactId>mitobo-plugins</artifactId>
  <version>1.8.8-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>mitobo-plugins</name>
  <description>ImageJ plugins for MiToBo - A Microscope Image Analysis TOolBox</description> 
  <url>http://www.informatik.uni-halle.de/mitobo</url>
  <inceptionYear>2010</inceptionYear>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <YEAR>2018</YEAR>
    <!-- define a default native directory, does not work in all cases,
	 but avoids that Maven fails completely -->
    <native.libdir>lib64</native.libdir>
    <mitobo.version>1.8.8-SNAPSHOT</mitobo.version>
  </properties>

  <licenses>
    <license>
      <name>GNU General Public License version 3.0</name>
      <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
    </license>
  </licenses>

  <organization>
    <name>Martin Luther University Halle-Wittenberg</name>
    <url>http://www.uni-halle.de</url>
  </organization>

  <developers>
    <developer>
      <id>moeller</id>
      <email>birgit.moeller@informatik.uni-halle.de</email>
      <name>Birgit Moeller</name>
      <organization>Martin Luther University Halle-Wittenberg</organization>
      <organizationUrl>http://www.informatik.uni-halle.de/moeller</organizationUrl>
      <roles>
	<role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>posch</id>
      <email>stefan.posch@informatik.uni-halle.de</email>
      <name>Stefan Posch</name>
      <organization>Martin Luther University Halle-Wittenberg</organization>
      <organizationUrl>http://www.informatik.uni-halle.de/posch</organizationUrl>
      <roles>
	<role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>glass</id>
      <email>markus.glass@medizin.uni-halle.de</email>
      <name>Markus Glass</name>
      <organization>Martin Luther University Halle-Wittenberg</organization>
      <roles>
	<role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
    <developer>
      <id>misiak</id>
      <email>danny.misiak@informatik.uni-halle.de</email>
      <name>Danny Misiak</name>
      <organization>Martin Luther University Halle-Wittenberg</organization>
      <roles>
	<role>Developer</role>
      </roles>
      <timezone>+1</timezone>
    </developer>
  </developers>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.2</version>
	<dependencies>
	  <dependency>
	    <groupId>org.apache.maven.shared</groupId>
	    <artifactId>maven-filtering</artifactId>
	    <version>3.1.1</version>
	  </dependency>
	</dependencies>
	<configuration>
	  <delimiters>
	    <delimiter>${*}</delimiter>  <!-- to keep the default behavior -->
	    <delimiter>@*@</delimiter>   <!-- to add Ant-like tokens style -->
	  </delimiters>
	</configuration>
        <executions>
          <execution>
            <id>copy-jar</id>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/plugins</outputDirectory>
              <resources>          
                <resource>
		  <directory>target/classes</directory>
                  <include>**/*.class</include>
                  <filtering>false</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
          <execution>
            <id>copy-resources-for-execution</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
	      <delimiters>
	        <delimiter>${*}</delimiter> <!-- to keep the default behavior --> 
	        <delimiter>@*@</delimiter>  <!-- to add Ant-like tokens style --> 
	      </delimiters>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
	          <directory>src/main/resources</directory>
	          <includes>
                    <include>revision-mitobo-plugins.txt</include>
	          </includes>
	          <filtering>true</filtering>
                  </resource>
                <resource>
	           <directory>src/main/resources</directory>
	           <excludes>
                     <exclude>revision-mitobo-plugins.txt</exclude>
	           </excludes>
	           <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <!-- files needed to package -->
          <execution>
            <id>copy-resources-for-packaging</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
	      <delimiters>
	        <delimiter>${*}</delimiter> <!-- to keep the default behavior --> 
	        <delimiter>@*@</delimiter>  <!-- to add Ant-like tokens style --> 
	      </delimiters>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
              <resources>
                <resource>
	          <directory>src/main/java</directory>
	          <filtering>true</filtering>
	          <includes>
                    <include>**/*.java</include>
	          </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- copy dependencies incl. help jar to local folder -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
	<version>3.0.1</version>
        <executions>
	  <execution>
	    <id>unpack</id>
	    <phase>compile</phase>
	    <goals>
	      <goal>unpack</goal>
	    </goals>
	    <configuration>
	      <artifactItems>
		<artifactItem>
		  <groupId>de.unihalle.informatik.MiToBo.native</groupId>
		  <artifactId>mitobo-native-${native.libdir}</artifactId>
		  <version>1.2</version>
		  <type>jar</type>
		  <overWrite>true</overWrite>
		  <outputDirectory>target/natives/${native.libdir}</outputDirectory>
		</artifactItem>
		<artifactItem>
		  <groupId>de.unihalle.informatik.MiToBo</groupId>
		  <artifactId>mitobo</artifactId>
		  <version>${mitobo.version}</version>
		  <classifier>bin</classifier>
		  <type>zip</type>
		  <overWrite>true</overWrite>
		  <outputDirectory>target/mitobo/</outputDirectory>
		</artifactItem>
	      </artifactItems>
	    </configuration>
	  </execution>
        </executions>
      </plugin>

      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-compiler-plugin</artifactId>
	<version>3.7.0</version>
	<configuration>
	  <source>1.8</source>
	  <target>1.8</target>
	</configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
      </plugin>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-site-plugin</artifactId>
	<version>3.6</version>
      </plugin>
      <plugin>
	<!-- Here we use our own assembly description to pack a jar. -->
	<artifactId>maven-assembly-plugin</artifactId>
	<version>3.1.0</version>
	<configuration>
	  <descriptors>
	    <descriptor>src/main/assembly/mitobo-plugins-bin.xml</descriptor>
	    <descriptor>src/main/assembly/mitobo-plugins-src.xml</descriptor>
	  </descriptors>
	</configuration>
	<executions>
	  <execution>
	    <id>assembly-distribution-Id</id>
	    <phase>package</phase>
	    <goals>
	      <goal>single</goal>
	    </goals>
	  </execution>
	</executions>
      </plugin>
      <plugin>
        <!-- package javadocs -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
	<version>2.10.4</version>
        <configuration>
	  <javadocVersion>1.8</javadocVersion>
	  <stylesheet>java</stylesheet>
          <show>private</show>
	  <additionalparam>-Xdoclint:none</additionalparam>
          <taglets>
            <taglet>
              <tagletClass>latexlet.InlineLaTeXlet</tagletClass>
              <tagletArtifact>
                <groupId>latexlet</groupId>
                <artifactId>latexlet</artifactId>
                <version>1.2f8-SNAPSHOT</version>
              </tagletArtifact>
            </taglet>
            <taglet>
              <tagletClass>latexlet.InlineBlockLaTeXlet</tagletClass>
              <tagletArtifact>
                <groupId>latexlet</groupId>
                <artifactId>latexlet</artifactId>
                <version>1.2f8-SNAPSHOT</version>
              </tagletArtifact>
            </taglet>
            <taglet>
              <tagletClass>latexlet.BlockLaTeXlet</tagletClass>
              <tagletArtifact>
                <groupId>latexlet</groupId>
                <artifactId>latexlet</artifactId>
                <version>1.2f8-SNAPSHOT</version>
              </tagletArtifact>
            </taglet>
          </taglets>
	  <!-- switch on dependency-driven aggregation -->
	  <includeDependencySources>true</includeDependencySources>
	  <dependencySourceIncludes>
	    <!-- Include ONLY our own dependencies, never remove this! 
		 If removed, sources of all dependencies have to be available, 
		 otherwise Maven will fail! -->
	    <dependencySourceInclude>de.unihalle.informatik.MiToBo:*</dependencySourceInclude>
	  </dependencySourceIncludes>
	  <additionalDependencies>
	    <additionalDependency>
	      <groupId>de.unihalle.informatik.MiToBo</groupId>
	      <artifactId>mitobo</artifactId>
	      <version>${mitobo.version}</version>
	    </additionalDependency>
	  </additionalDependencies>
	</configuration>
	<executions>
         <execution>
            <id>javadoc-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
	  </execution>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- configuration to run MiToBo via mvn exec:exec -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
	<configuration>
          <executable>java</executable>
	  <classpathScope>runtime</classpathScope>
          <arguments>
	    <argument>-classpath</argument>
            <!-- automatically creates the classpath using all project dependencies,
                 also adding the project build directory -->
            <classpath/>
	    <argument>-Xms2048m</argument>
	    <argument>-Xmx2048m</argument>
	    <argument>-Djava.library.path=target/natives/${native.libdir}</argument>
	    <argument>-Dalida.versionprovider_class=de.unihalle.informatik.MiToBo.core.operator.MTBVersionProviderReleaseFile</argument>
	    <argument>-Dalida.oprunner.level=standard</argument>
            <argument>ij.ImageJ</argument>
            <argument>-ijpath</argument>
            <argument>.</argument>
          </arguments>
        </configuration>
      </plugin>
    </plugins>

  </build>

  <reporting>
    <plugins>
      <plugin>
	<groupId>org.apache.maven.plugins</groupId>
	<artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.4</version>
      </plugin>
    </plugins>
  </reporting>

  <repositories>
    <repository>
      <id>jboss</id>
      <name>JBoss Thirdparty Releases</name>
      <url>https://repository.jboss.org/nexus/content/repositories/thirdparty-releases</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>snapshots</id>
      <name>Archiva Public Snapshot Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/archiva/repository/snapshots-pub/</url>
      <layout>default</layout>
    </repository>
    <repository>
      <id>releases</id>
      <name>Archiva Release Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/archiva/repository/releases/</url>
      <layout>default</layout>
    </repository>
  </repositories>

  <distributionManagement>
    <snapshotRepository>
      <id>snapshots</id>
      <name>Archiva Public Snapshot Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/archiva/repository/snapshots-pub/</url>
    </snapshotRepository>
    <repository>
      <id>releases</id>
      <name>Archiva Release Repository on 'moon'</name>
      <url>https://moon.informatik.uni-halle.de/archiva/repository/releases/</url>
    </repository>
  </distributionManagement>

  <dependencyManagement>
    <dependencies>
      <dependency>
	<groupId>org.scijava</groupId>
	<artifactId>pom-scijava</artifactId>
	<version>19.2.0</version>
	<type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>de.unihalle.informatik.MiToBo</groupId>
      <artifactId>mitobo</artifactId>
      <version>${mitobo.version}</version>
    </dependency>
  </dependencies>

  <scm>
    <connection>scm:git:https://github.com/mitobo-hub/mitobo-plugins.git</connection>
    <developerConnection>scm:git:https://github.com/mitobo-hub/mitobo-plugins.git</developerConnection>
  </scm>

  <profiles>
    <!-- architecture dependent settings -->
    <profile>
      <id>linux-x86</id>
      <activation>
	<os>
	  <arch>i386</arch>
	</os>
      </activation>
      <properties>
	<native.libdir>lib32</native.libdir>
      </properties>
    </profile>
    <profile>
      <id>linux-x64</id>
      <activation>
	<os>
	  <arch>amd64</arch>
	</os>
      </activation>
      <properties>
	<native.libdir>lib64</native.libdir>
      </properties>
    </profile>
    <profile>
      <id>win32</id>
      <activation>
	<os>
	  <arch>Windows</arch>
	</os>
      </activation>
      <properties>
	<native.libdir>win32</native.libdir>
      </properties>
    </profile>
  </profiles> 

  <issueManagement>
    <system>Github Issue Tracking</system>
    <url>https://github.com/mitobo-hub/mitobo-plugins/issues</url>
  </issueManagement>

</project>
